.TH CCHECK "1" "October 2009" "ccheck" "User Commands"
.SH NAME
CCHECK \fB\-\-\fR Contamination Check for mia
.SH SYNPOSIS
ccheck [\-r \fIref.fa\fR] [\-a] [\-t] [\-s \fIM\-N\fR] [\-v] [\fIaln.maln\fR...]
.SH DESCRIPTION
CCHECK looks at alignments in .maln assembly files as generated by
\fBMIA\fR and tries to determine for each sequence whether it is likely
to be a known contaminant or genuine sequence.  Here \fIref.fa\fR is the
expected contaminant in FastA format, \fIaln.maln\fR is the output from
\fBMIA\fR, typically the last iteration.  \fBccheck\fR aligns the
assembled sequence and the contaminant, determining positions where no
credible contaminant would look like the sample, so called \fIstrongly
diagnostic positions\fR.  It then aligns each read from
the maln file to the contaminant in the same way \fBMIA\fR would have
and checks for clearly aligned \fIdiagnostic positions\fR.  Depending on
whether these positions are consistent with genuine sequence and/or
contamination, sequences are labelled clean, contaminant, conflicting,
nonsensical or uninformative.  A contamination estimate with a 95%
confidence interval is then printed.

Originally, \fBccheck\fR was intended to be used on the mitochondria of
Neanderthals.  That check, if applied to modern humans (or archaic,
modern humans), has to fail by construction.  Therefore, \fBccheck\fR
now implements an additional check where a site is also considered
\fIweakly diagnostic\fR if only some modern human sequences differ from
the sample, and at least one contaminating was seen, turning them into
\fIeffectively diagnistic positions\fR.  Since this can be a gross
overestimate, \fBccheck\fR prints the results of both checks.


.SH OPTIONS
.TP
\fB\-r\fR, \fB--reference\fR \fIref.fa\fR
Defines the expected contaminant.  If your assembly is the mitochondrion
of a primate, \fIref.fa\fR would be the consensus of many human
mitochondria.  The contamiant is allowed to contain the \fIN\fR code for
unknown positions, but no other ambiguity codes or gaps.  If no
contamiant is given, a builtin consensus of 311 human mitochondria is
used.
.TP 
\fB\-a\fR, \fB--ancient\fR
Treat DNA as ancient, that is, assume it suffered from deamination.  This
option has no influence on the alignment algorithm (it always takes its
substitution matrices from the maln file), it merely tells \fBccheck\fR
that a \fIT\fR or an \fIA\fR in a sequence are less informative because
they could have been formed from a \fIC\fR or \fIG\fR, respectively.  In
contrast, \fIC\fR and \fIG\fR remain fully informative in any case.
.TP
\fB\-t\fR, \fB--transversions\fR
Restrict analysis to sites that show a transversion between contamiant
and assembly.  Using this option throws away valuable information and is
recommended if and only if you're going to write a paper about ancient
DNA and don't want to explain why you trust a \fIC\fR but don't trust a
\fIT\fR.
.TP
\fB\-s\fR, \fB--span\fR \fIM\-N\fR
Restrict analysis to the range from \fIM\fR to \fIN\fR on the
contaminant sequence.  Sticking with the mitochondrion example, you
could restrict the analysis to the hypervariable region.  Again, this
throws away information and could only ever be useful to placate
reviewers of your paper.
.TP
\fB\-d\fR, \fB--maxd\fR \fID\fR
Allow up to \fID\fR differences when aligning assembly and contaminant.
This option is not normally needed, unless your contaminant differs
widely enough from the assembly that their alignment fails.  If so, you
could specify a bigger \fID\fR to allow aligning them anyway, though
\fBccheck\fR will likely fail even if the alignment doesn't.
.TP
\fB\-v\fR, \fB--verbose\fR
Increases the amount of debug output.  If repeated, produces even more
output.  You are not expected to understand any of the resulting
gibberish.
.TP
\fB\-f\fR, \fB--force\fR
Normally, \fBccheck\fR looks for a .maln file with a higher number than
given on the command line.  This behaviour is usually desired, but can
be overridden by specifying the \fB\-f\fR option.  

.SH NOTES
Despite this documentation, which hints otherwise, you should probably
not base a scientific paper on the output from this program.  Use at
your own risk.

Users have been observed trying to trick \fBccheck\fR into comparing things it
is not supposed to compare, e.g. by running it on .maln output files from
the first \fBMIA\fR iteration or by supplying variously mangled reference
sequences.  Such endeavours tend to end in combinations of meaningless
numbers and insulting error messages.  

If \fBccheck\fR reports a contamination level of more than a few
percent, chances are that your assembly is completely worthless and the
real contamination level is much higher.  If \fBccheck\fR finds hardly
any diagnostic positions, you may have actually assembled the
contaminant, which will look clean.  Finally, if \fBccheck\fR doesn't
report contamination, your contaminant may simply look different from
what you expected.  This program will not magically clean up your
sample.

.SH "AUTHOR"
Written by Ed Green, Michael Siebauer and Udo Stenzel.

.SH "REPORTING BUGS"
Report bugs to <green@eva.mpg.de>.

.SH "COPYRIGHT"
Copyright Â© 2008 Ed Green  Michael Siebauer  Udo Stenzel.
License Perl Artistic License 2.0
<http://www.perlfoundation.org/artistic_license_2_0>.  This is free
software: you are free to change and redistribute it.  There is NO
WARRANTY, to the extent permitted by law.

.SH "SEE ALSO"
mia (1)
